# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'google/monitoring/property/alertpolicy_conditions_condition_threshold_aggregations'
require 'google/monitoring/property/alertpolicy_conditions_condition_threshold_denominator_aggregations'
require 'google/monitoring/property/alertpolicy_conditions_condition_threshold_trigger'
module GoogleInSpec
  module Monitoring
    module Property
      class AlertPolicyConditionsConditionThreshold
        attr_reader :threshold_value

        attr_reader :denominator_filter

        attr_reader :denominator_aggregations

        attr_reader :duration

        attr_reader :comparison

        attr_reader :trigger

        attr_reader :aggregations

        attr_reader :filter

        def initialize(args = nil, parent_identifier = nil)
          return if args.nil?
          @parent_identifier = parent_identifier
          @threshold_value = args['thresholdValue']
          @denominator_filter = args['denominatorFilter']
          @denominator_aggregations = GoogleInSpec::Monitoring::Property::AlertPolicyConditionsConditionThresholdDenominatorAggregationsArray.parse(args['denominatorAggregations'], to_s)
          @duration = args['duration']
          @comparison = args['comparison']
          @trigger = GoogleInSpec::Monitoring::Property::AlertPolicyConditionsConditionThresholdTrigger.new(args['trigger'], to_s)
          @aggregations = GoogleInSpec::Monitoring::Property::AlertPolicyConditionsConditionThresholdAggregationsArray.parse(args['aggregations'], to_s)
          @filter = args['filter']
        end

        def to_s
          "#{@parent_identifier} AlertPolicyConditionsConditionThreshold"
        end
      end
    end
  end
end
